### YamlMime:ManagedReference
items:
- uid: com.absence.variablebanks.internals.VariableBanksCloningHandler
  commentId: T:com.absence.variablebanks.internals.VariableBanksCloningHandler
  id: VariableBanksCloningHandler
  parent: com.absence.variablebanks.internals
  children:
  - com.absence.variablebanks.internals.VariableBanksCloningHandler.AddCloningCompleteCallbackOrInvoke(System.Action)
  - com.absence.variablebanks.internals.VariableBanksCloningHandler.CloningCompleted
  - com.absence.variablebanks.internals.VariableBanksCloningHandler.OnCloningCompleted
  langs:
  - csharp
  - vb
  name: VariableBanksCloningHandler
  nameWithType: VariableBanksCloningHandler
  fullName: com.absence.variablebanks.internals.VariableBanksCloningHandler
  type: Class
  source:
    remote:
      path: absent-variablebanks/Assets/Plugins/absencee_/absent-variablebanks/Runtime/Static/VariableBanksCloningHandler.cs
      branch: development
      repo: https://github.com/b1lodHand/absent-variablebanks.git
    id: VariableBanksCloningHandler
    path: ../absent-variablebanks/Assets/Plugins/absencee_/absent-variablebanks/Runtime/Static/VariableBanksCloningHandler.cs
    startLine: 11
  assemblies:
  - Assembly-CSharp-firstpass
  namespace: com.absence.variablebanks.internals
  summary: The static class responsible for cloning the banks at startup.
  example: []
  syntax:
    content: public static class VariableBanksCloningHandler
    content.vb: Public Module VariableBanksCloningHandler
  inheritance:
  - System.Object
- uid: com.absence.variablebanks.internals.VariableBanksCloningHandler.OnCloningCompleted
  commentId: E:com.absence.variablebanks.internals.VariableBanksCloningHandler.OnCloningCompleted
  id: OnCloningCompleted
  parent: com.absence.variablebanks.internals.VariableBanksCloningHandler
  langs:
  - csharp
  - vb
  name: OnCloningCompleted
  nameWithType: VariableBanksCloningHandler.OnCloningCompleted
  fullName: com.absence.variablebanks.internals.VariableBanksCloningHandler.OnCloningCompleted
  type: Event
  source:
    remote:
      path: absent-variablebanks/Assets/Plugins/absencee_/absent-variablebanks/Runtime/Static/VariableBanksCloningHandler.cs
      branch: development
      repo: https://github.com/b1lodHand/absent-variablebanks.git
    id: OnCloningCompleted
    path: ../absent-variablebanks/Assets/Plugins/absencee_/absent-variablebanks/Runtime/Static/VariableBanksCloningHandler.cs
    startLine: 18
  assemblies:
  - Assembly-CSharp-firstpass
  namespace: com.absence.variablebanks.internals
  summary: Action which will get invoked when cloning process gets completed successfully. It gets cleared automatically after invoking.
  example: []
  syntax:
    content: public static event Action OnCloningCompleted
    return:
      type: System.Action
    content.vb: Public Shared Event OnCloningCompleted As Action
- uid: com.absence.variablebanks.internals.VariableBanksCloningHandler.CloningCompleted
  commentId: P:com.absence.variablebanks.internals.VariableBanksCloningHandler.CloningCompleted
  id: CloningCompleted
  parent: com.absence.variablebanks.internals.VariableBanksCloningHandler
  langs:
  - csharp
  - vb
  name: CloningCompleted
  nameWithType: VariableBanksCloningHandler.CloningCompleted
  fullName: com.absence.variablebanks.internals.VariableBanksCloningHandler.CloningCompleted
  type: Property
  source:
    remote:
      path: absent-variablebanks/Assets/Plugins/absencee_/absent-variablebanks/Runtime/Static/VariableBanksCloningHandler.cs
      branch: development
      repo: https://github.com/b1lodHand/absent-variablebanks.git
    id: CloningCompleted
    path: ../absent-variablebanks/Assets/Plugins/absencee_/absent-variablebanks/Runtime/Static/VariableBanksCloningHandler.cs
    startLine: 23
  assemblies:
  - Assembly-CSharp-firstpass
  namespace: com.absence.variablebanks.internals
  summary: Use to check if the cloning process got completed successfully.
  example: []
  syntax:
    content: public static bool CloningCompleted { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Shared Property CloningCompleted As Boolean
  overload: com.absence.variablebanks.internals.VariableBanksCloningHandler.CloningCompleted*
- uid: com.absence.variablebanks.internals.VariableBanksCloningHandler.AddCloningCompleteCallbackOrInvoke(System.Action)
  commentId: M:com.absence.variablebanks.internals.VariableBanksCloningHandler.AddCloningCompleteCallbackOrInvoke(System.Action)
  id: AddCloningCompleteCallbackOrInvoke(System.Action)
  parent: com.absence.variablebanks.internals.VariableBanksCloningHandler
  langs:
  - csharp
  - vb
  name: AddCloningCompleteCallbackOrInvoke(Action)
  nameWithType: VariableBanksCloningHandler.AddCloningCompleteCallbackOrInvoke(Action)
  fullName: com.absence.variablebanks.internals.VariableBanksCloningHandler.AddCloningCompleteCallbackOrInvoke(System.Action)
  type: Method
  source:
    remote:
      path: absent-variablebanks/Assets/Plugins/absencee_/absent-variablebanks/Runtime/Static/VariableBanksCloningHandler.cs
      branch: development
      repo: https://github.com/b1lodHand/absent-variablebanks.git
    id: AddCloningCompleteCallbackOrInvoke
    path: ../absent-variablebanks/Assets/Plugins/absencee_/absent-variablebanks/Runtime/Static/VariableBanksCloningHandler.cs
    startLine: 55
  assemblies:
  - Assembly-CSharp-firstpass
  namespace: com.absence.variablebanks.internals
  summary: >-
    Adds the action passed to <xref href="com.absence.variablebanks.internals.VariableBanksCloningHandler.OnCloningCompleted" data-throw-if-not-resolved="false"></xref> if the cloning process is not ended yet. If it is ended already,

    the action passed gets invoked instantly.
  example: []
  syntax:
    content: public static bool AddCloningCompleteCallbackOrInvoke(Action callbackContext)
    parameters:
    - id: callbackContext
      type: System.Action
      description: ''
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Shared Function AddCloningCompleteCallbackOrInvoke(callbackContext As Action) As Boolean
  overload: com.absence.variablebanks.internals.VariableBanksCloningHandler.AddCloningCompleteCallbackOrInvoke*
references:
- uid: com.absence.variablebanks.internals
  commentId: N:com.absence.variablebanks.internals
  href: com.html
  name: com.absence.variablebanks.internals
  nameWithType: com.absence.variablebanks.internals
  fullName: com.absence.variablebanks.internals
  spec.csharp:
  - uid: com
    name: com
    href: com.html
  - name: .
  - uid: com.absence
    name: absence
    href: com.absence.html
  - name: .
  - uid: com.absence.variablebanks
    name: variablebanks
    href: com.absence.variablebanks.html
  - name: .
  - uid: com.absence.variablebanks.internals
    name: internals
    href: com.absence.variablebanks.internals.html
  spec.vb:
  - uid: com
    name: com
    href: com.html
  - name: .
  - uid: com.absence
    name: absence
    href: com.absence.html
  - name: .
  - uid: com.absence.variablebanks
    name: variablebanks
    href: com.absence.variablebanks.html
  - name: .
  - uid: com.absence.variablebanks.internals
    name: internals
    href: com.absence.variablebanks.internals.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Action
  commentId: T:System.Action
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action
  name: Action
  nameWithType: Action
  fullName: System.Action
- uid: com.absence.variablebanks.internals.VariableBanksCloningHandler.CloningCompleted*
  commentId: Overload:com.absence.variablebanks.internals.VariableBanksCloningHandler.CloningCompleted
  href: com.absence.variablebanks.internals.VariableBanksCloningHandler.html#com_absence_variablebanks_internals_VariableBanksCloningHandler_CloningCompleted
  name: CloningCompleted
  nameWithType: VariableBanksCloningHandler.CloningCompleted
  fullName: com.absence.variablebanks.internals.VariableBanksCloningHandler.CloningCompleted
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: com.absence.variablebanks.internals.VariableBanksCloningHandler.OnCloningCompleted
  commentId: E:com.absence.variablebanks.internals.VariableBanksCloningHandler.OnCloningCompleted
  href: com.absence.variablebanks.internals.VariableBanksCloningHandler.html#com_absence_variablebanks_internals_VariableBanksCloningHandler_OnCloningCompleted
  name: OnCloningCompleted
  nameWithType: VariableBanksCloningHandler.OnCloningCompleted
  fullName: com.absence.variablebanks.internals.VariableBanksCloningHandler.OnCloningCompleted
- uid: com.absence.variablebanks.internals.VariableBanksCloningHandler.AddCloningCompleteCallbackOrInvoke*
  commentId: Overload:com.absence.variablebanks.internals.VariableBanksCloningHandler.AddCloningCompleteCallbackOrInvoke
  href: com.absence.variablebanks.internals.VariableBanksCloningHandler.html#com_absence_variablebanks_internals_VariableBanksCloningHandler_AddCloningCompleteCallbackOrInvoke_System_Action_
  name: AddCloningCompleteCallbackOrInvoke
  nameWithType: VariableBanksCloningHandler.AddCloningCompleteCallbackOrInvoke
  fullName: com.absence.variablebanks.internals.VariableBanksCloningHandler.AddCloningCompleteCallbackOrInvoke
